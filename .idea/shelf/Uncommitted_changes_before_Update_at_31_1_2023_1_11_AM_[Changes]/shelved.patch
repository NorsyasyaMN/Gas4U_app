Index: app/src/main/java/com/example/gas4u/AdapterProduct.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.gas4u;\r\n\r\nimport android.content.Context;\r\nimport android.graphics.Paint;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class AdapterProduct extends RecyclerView.Adapter<AdapterProduct.HolderProduct> {\r\n\r\n    private Context context;\r\n    public ArrayList<ModelProduct> productList;\r\n\r\n    public AdapterProduct(Context context, ArrayList<ModelProduct> productList) {\r\n        this.context = context;\r\n        this.productList = productList;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public HolderProduct onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        //inflate layout\r\n        View view = LayoutInflater.from(context).inflate(R.layout.row_product, parent, false);\r\n        return new HolderProduct(view);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull HolderProduct holder, int position) {\r\n        //get data\r\n        ModelProduct modelProduct=productList.get(position);\r\n        String id= modelProduct.getProductId();\r\n        String discountAvailable= modelProduct.getDiscountAvailable();\r\n        String discountNote= modelProduct.getDiscountNote();\r\n        String discountPrice= modelProduct.getDiscountPrice();\r\n        String productCategory= modelProduct.getProductCategory();\r\n        String productDescription= modelProduct.getProductDescription();\r\n        String icon= modelProduct.getProductIcon();\r\n        String quantity= modelProduct.getProductQuantity();\r\n        String title= modelProduct.getProductTitle();\r\n        String timestamp= modelProduct.getTimestamp();\r\n        String originalPrice= modelProduct.getOriginalPrice();\r\n\r\n        //set data\r\n        holder.titleTv.setText(title);\r\n        holder.productIdTv.setText(id);\r\n        holder.quantityTv.setText(quantity);\r\n        holder.discountedNoteTv.setText(discountNote);\r\n        holder.discountedPriceTv.setText(\"RM\"+discountPrice);\r\n        holder.originalPriceTv.setText(\"RM\"+originalPrice);\r\n        if(discountAvailable.equals(\"true\")){\r\n            //product discount\r\n            holder.discountedPriceTv.setVisibility(View.VISIBLE);\r\n            holder.discountedNoteTv.setVisibility(View.VISIBLE);\r\n            holder.originalPriceTv.setPaintFlags(holder.originalPriceTv.getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG);//add strike through original price\r\n        }\r\n        else{\r\n            //product not discount\r\n            holder.discountedNoteTv.setText(\"0% off\");\r\n            holder.discountedPriceTv.setText(\"No Discount\");\r\n            holder.discountedPriceTv.setVisibility(View.VISIBLE);\r\n            holder.discountedNoteTv.setVisibility(View.VISIBLE);\r\n        }\r\n        try{\r\n            Picasso.get().load(icon).placeholder(R.drawable.add_product).into(holder.productIconIv);\r\n\r\n        } catch (Exception e){\r\n            holder.productIconIv.setImageResource(R.drawable.add_product);\r\n        }\r\n        holder.itemView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                //handle item clicks, show item details\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return productList.size();\r\n    }\r\n\r\n\r\n    public class HolderProduct extends RecyclerView.ViewHolder {\r\n        private ImageView productIconIv;\r\n        private TextView discountedNoteTv, titleTv, quantityTv, discountedPriceTv, originalPriceTv,productIdTv;\r\n        public HolderProduct(@NonNull View itemView) {\r\n            super(itemView);\r\n            productIconIv=itemView.findViewById(R.id.productIconIv);\r\n            discountedNoteTv=itemView.findViewById(R.id.discountedNoteTv);\r\n            productIdTv = itemView.findViewById(R.id.productIdTv);\r\n            titleTv=itemView.findViewById(R.id.titleTv);\r\n            quantityTv=itemView.findViewById(R.id.quantityTv);\r\n            discountedPriceTv=itemView.findViewById(R.id.discountedPriceTv);\r\n            originalPriceTv=itemView.findViewById(R.id.originalPriceTv);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/gas4u/AdapterProduct.java b/app/src/main/java/com/example/gas4u/AdapterProduct.java
--- a/app/src/main/java/com/example/gas4u/AdapterProduct.java	(revision 918356813e1f3a3bd7447264d180880f63f495c5)
+++ b/app/src/main/java/com/example/gas4u/AdapterProduct.java	(date 1675098537881)
@@ -5,14 +5,13 @@
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.Filter;
 import android.widget.ImageView;
 import android.widget.TextView;
 
 import androidx.annotation.NonNull;
 import androidx.recyclerview.widget.RecyclerView;
 
-import com.google.firebase.auth.FirebaseAuth;
-import com.google.firebase.firestore.FirebaseFirestore;
 import com.squareup.picasso.Picasso;
 
 import java.util.ArrayList;
@@ -20,11 +19,13 @@
 public class AdapterProduct extends RecyclerView.Adapter<AdapterProduct.HolderProduct> {
 
     private Context context;
-    public ArrayList<ModelProduct> productList;
+    public ArrayList<ModelProduct> productList,filterList;
+    private FilterProduct filter;
 
     public AdapterProduct(Context context, ArrayList<ModelProduct> productList) {
         this.context = context;
         this.productList = productList;
+        this.filterList = productList;
     }
 
     @NonNull
@@ -92,6 +93,14 @@
         return productList.size();
     }
 
+//    @Override
+//    public Filter getFilter() {
+//        if (filter==null){
+//            filter = new FilterProduct(this,filterList);
+//
+//        }
+//        return filter;
+//    }
 
     public class HolderProduct extends RecyclerView.ViewHolder {
         private ImageView productIconIv;
Index: app/src/main/java/com/example/gas4u/AdminViewProduct.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.gas4u;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.TextView;\r\n\r\nimport com.example.gas4u.databinding.ActivityAdminViewProductBinding;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.firestore.DocumentChange;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.EventListener;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\nimport com.google.firebase.firestore.Query;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\n\r\npublic class AdminViewProduct extends DrawerAdminActivity{\r\n\r\n    ActivityAdminViewProductBinding activityAdminViewProductBinding;\r\n\r\n    TextView nameTv,emailTv,phoneTv, tabProductsTv, filterProductsTv;\r\n    EditText searchProductEt;\r\n    ImageButton logoutBtn,addToCart,filterProductBtn;\r\n    ImageView profileIv;\r\n    RelativeLayout productsRl;\r\n    RecyclerView productsRv;\r\n\r\n    FirebaseFirestore db;\r\n    FirebaseAuth firebaseAuth;\r\n    ProgressDialog progressDialog;\r\n    ArrayList<ModelProduct> brandList;\r\n    AdapterProduct adapterProduct;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        activityAdminViewProductBinding = ActivityAdminViewProductBinding.inflate(getLayoutInflater());\r\n        setContentView(activityAdminViewProductBinding.getRoot());\r\n        allocateActivityTitle(\"Products\");\r\n\r\n        nameTv = findViewById(R.id.nameTv);\r\n        emailTv = findViewById(R.id.emailTv);\r\n        phoneTv = findViewById(R.id.phoneTv);\r\n        tabProductsTv = findViewById(R.id.tabProductsTv);\r\n        filterProductsTv = findViewById(R.id.filterProductsTv);\r\n        searchProductEt = findViewById(R.id.searchProductEt);\r\n        logoutBtn = findViewById(R.id.logoutBtn);\r\n        addToCart = findViewById(R.id.addToCart);\r\n        filterProductBtn = findViewById(R.id.filterProductBtn);\r\n        profileIv = findViewById(R.id.profileIv);\r\n        productsRl = findViewById(R.id.productsRl);\r\n        productsRv = findViewById(R.id.adminProductsRV);\r\n\r\n        progressDialog = new ProgressDialog(this);\r\n        progressDialog.setTitle(\"Please wait\");\r\n        progressDialog.setCanceledOnTouchOutside(false);\r\n        firebaseAuth = FirebaseAuth.getInstance();\r\n        db = FirebaseFirestore.getInstance();\r\n\r\n        checkUser();\r\n        loadAllProducts();\r\n\r\n        showProductsUI();\r\n\r\n        logoutBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                makeMeOffline();\r\n            }\r\n        });\r\n\r\n        tabProductsTv.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                showProductsUI();\r\n            }\r\n        });\r\n        addToCart.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                startActivity(new Intent(AdminViewProduct.this, d1.class));\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void loadAllProducts() {\r\n        brandList = new ArrayList<>();\r\n        //setup adapter\r\n        adapterProduct = new AdapterProduct(AdminViewProduct.this, brandList);\r\n        //set adapter\r\n        productsRv.setAdapter(adapterProduct);\r\n        db.collection(\"Product\").orderBy(\"productTitle\", Query.Direction.ASCENDING)\r\n                .addSnapshotListener(new EventListener<QuerySnapshot>() {\r\n\r\n                    @Override\r\n                    public void onEvent(@Nullable QuerySnapshot value, @Nullable FirebaseFirestoreException error) {\r\n\r\n                        brandList.clear();\r\n                        if (error != null) {\r\n\r\n                            Log.e(\"Firestore error\", error.getMessage());\r\n                            return;\r\n                        }\r\n                        for (DocumentChange dc : value.getDocumentChanges()) {\r\n\r\n                            if (dc.getType() == DocumentChange.Type.ADDED) {\r\n                                brandList.add(dc.getDocument().toObject(ModelProduct.class));\r\n                            }\r\n                            adapterProduct.notifyDataSetChanged();\r\n                        }\r\n\r\n                    }\r\n                });\r\n    }\r\n    private void showProductsUI() {\r\n        productsRl.setVisibility(View.VISIBLE);\r\n\r\n        tabProductsTv.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n        tabProductsTv.setBackgroundResource((R.drawable.shape_rect01));\r\n    }\r\n    private void checkUser() {\r\n        loadMyInfo();\r\n    }\r\n    private void loadMyInfo() {\r\n\r\n        FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();\r\n        DocumentReference reference;\r\n        FirebaseFirestore firestore = FirebaseFirestore.getInstance();\r\n        reference = firestore.collection(\"Customers\").document(user.getUid());\r\n        reference.get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                if (task.getResult().exists()) {\r\n\r\n                    String nameResult = task.getResult().getString(\"userName\");\r\n                    String url = task.getResult().getString(\"profilePhoto\");\r\n                    String emailResult = task.getResult().getString(\"userEmail\");\r\n                    String phoneResult = task.getResult().getString(\"userPhone\");\r\n\r\n//                    Picasso.get().load(url).into(profileIv);\r\n                    nameTv.setText(nameResult);\r\n                    emailTv.setText(emailResult);\r\n                    phoneTv.setText(phoneResult);\r\n                    try{\r\n                        Picasso.get().load(url).placeholder(R.drawable.ic_baseline_person_24).into(profileIv);\r\n                    }\r\n                    catch(Exception e){\r\n                        profileIv.setImageResource(R.drawable.ic_baseline_person_24);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void makeMeOffline() {\r\n        startActivity(new Intent(AdminViewProduct.this, d4.class));\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/gas4u/AdminViewProduct.java b/app/src/main/java/com/example/gas4u/AdminViewProduct.java
--- a/app/src/main/java/com/example/gas4u/AdminViewProduct.java	(revision 918356813e1f3a3bd7447264d180880f63f495c5)
+++ b/app/src/main/java/com/example/gas4u/AdminViewProduct.java	(date 1675098537902)
@@ -2,7 +2,6 @@
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
-import androidx.appcompat.app.AppCompatActivity;
 import androidx.recyclerview.widget.RecyclerView;
 
 import android.app.AlertDialog;
@@ -13,6 +12,7 @@
 import android.text.Editable;
 import android.text.TextWatcher;
 import android.util.Log;
+import android.view.LayoutInflater;
 import android.view.View;
 import android.widget.EditText;
 import android.widget.ImageButton;
@@ -20,11 +20,16 @@
 import android.widget.RelativeLayout;
 import android.widget.TextView;
 
-import com.example.gas4u.databinding.ActivityAdminViewProductBinding;
+import com.example.gas4u.databinding.ActivityBrandBinding;
 import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.Task;
 import com.google.firebase.auth.FirebaseAuth;
 import com.google.firebase.auth.FirebaseUser;
+import com.google.firebase.database.DataSnapshot;
+import com.google.firebase.database.DatabaseError;
+import com.google.firebase.database.DatabaseReference;
+import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.database.ValueEventListener;
 import com.google.firebase.firestore.DocumentChange;
 import com.google.firebase.firestore.DocumentReference;
 import com.google.firebase.firestore.DocumentSnapshot;
@@ -38,9 +43,9 @@
 import java.util.ArrayList;
 import java.util.HashMap;
 
-public class AdminViewProduct extends DrawerAdminActivity{
+public class AdminViewProduct extends DrawerBaseActivity {
 
-    ActivityAdminViewProductBinding activityAdminViewProductBinding;
+    ActivityBrandBinding activityBrandBinding;
 
     TextView nameTv,emailTv,phoneTv, tabProductsTv, filterProductsTv;
     EditText searchProductEt;
@@ -52,14 +57,14 @@
     FirebaseFirestore db;
     FirebaseAuth firebaseAuth;
     ProgressDialog progressDialog;
-    ArrayList<ModelProduct> brandList;
-    AdapterProduct adapterProduct;
+    ArrayList<ModelProduct> productList;
+    AdapterProductSeller adapterProductSeller;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        activityAdminViewProductBinding = ActivityAdminViewProductBinding.inflate(getLayoutInflater());
-        setContentView(activityAdminViewProductBinding.getRoot());
+        activityBrandBinding = ActivityBrandBinding.inflate(getLayoutInflater());
+        setContentView(activityBrandBinding.getRoot());
         allocateActivityTitle("Products");
 
         nameTv = findViewById(R.id.nameTv);
@@ -73,19 +78,39 @@
         filterProductBtn = findViewById(R.id.filterProductBtn);
         profileIv = findViewById(R.id.profileIv);
         productsRl = findViewById(R.id.productsRl);
-        productsRv = findViewById(R.id.adminProductsRV);
+        productsRv = findViewById(R.id.productsRv);
 
         progressDialog = new ProgressDialog(this);
         progressDialog.setTitle("Please wait");
         progressDialog.setCanceledOnTouchOutside(false);
         firebaseAuth = FirebaseAuth.getInstance();
         db = FirebaseFirestore.getInstance();
-
         checkUser();
         loadAllProducts();
 
         showProductsUI();
 
+        //search
+        searchProductEt.addTextChangedListener(new TextWatcher() {
+            @Override
+            public void beforeTextChanged(CharSequence s, int start, int count, int after) {
+
+            }
+            @Override
+            public void onTextChanged(CharSequence s, int start, int before, int count) {
+                try{
+                    adapterProductSeller.getFilter().filter(s);
+                }catch (Exception e) {
+                    e.printStackTrace();
+                }
+            }
+
+            @Override
+            public void afterTextChanged(Editable s) {
+
+            }
+        });
+
         logoutBtn.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
@@ -93,35 +118,87 @@
             }
         });
 
+        addToCart.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+            }
+        });
+
         tabProductsTv.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
                 showProductsUI();
             }
         });
-        addToCart.setOnClickListener(new View.OnClickListener() {
+        filterProductBtn.setOnClickListener(new View.OnClickListener() {
             @Override
-            public void onClick(View view) {
-                startActivity(new Intent(AdminViewProduct.this, d1.class));
+            public void onClick(View v) {
+                AlertDialog.Builder builder = new AlertDialog.Builder(AdminViewProduct.this);
+                builder.setTitle("Choose Category:").setItems(Constants.productCategories1, new DialogInterface.OnClickListener() {
+                    @Override
+                    public void onClick(DialogInterface dialog, int which) {
+                        //get selected item
+                        String selected = Constants.productCategories1[which];
+                        filterProductsTv.setText(selected);
+                        if(selected.equals("All")){
+                            //load all
+                            loadAllProducts();
+                        }
+                        else{
+                            //load filter
+                            loadFilteredProducts(selected);
+                        }
+                    }
+                }).show();
             }
         });
-
+    }
 
+    private void loadFilteredProducts(String selected) {
+//        productList = new ArrayList<>();
+//        //get all products
+//        DatabaseReference reference = FirebaseDatabase.getInstance().getReference("Users");
+//        reference.child(firebaseAuth.getUid()).child("Products").addValueEventListener(new ValueEventListener() {
+//            @Override
+//            public void onDataChange(@NonNull DataSnapshot snapshot) {
+//                //before getting reset list
+//                productList.clear();
+//                for (DataSnapshot ds: snapshot.getChildren()){
+//                    String productCategory =""+ds.child("productCategory").getValue();
+//
+//                    //if selected category matches product category then add in list
+//                    if(selected.equals(productCategory)){
+//                        ModelProduct modelProduct = ds.getValue(ModelProduct.class);
+//                        productList.add(modelProduct);
+//                    }
+//                    ModelProduct modelProduct = ds.getValue(ModelProduct.class);
+//                    productList.add(modelProduct);
+//                }
+//                //setup adapter
+//                adapterProductSeller = new AdapterProductSeller(BrandActivity.this, productList);
+//                //set adapter
+//                productsRv.setAdapter(adapterProductSeller);
+//            }
+//            @Override
+//            public void onCancelled(@NonNull DatabaseError error) {
+//
+//            }
+//        });
     }
 
     private void loadAllProducts() {
-        brandList = new ArrayList<>();
+        productList = new ArrayList<>();
         //setup adapter
-        adapterProduct = new AdapterProduct(AdminViewProduct.this, brandList);
+        adapterProductSeller = new AdapterProductSeller(AdminViewProduct.this, productList);
         //set adapter
-        productsRv.setAdapter(adapterProduct);
+        productsRv.setAdapter(adapterProductSeller);
         db.collection("Product").orderBy("productTitle", Query.Direction.ASCENDING)
                 .addSnapshotListener(new EventListener<QuerySnapshot>() {
 
                     @Override
                     public void onEvent(@Nullable QuerySnapshot value, @Nullable FirebaseFirestoreException error) {
 
-                        brandList.clear();
+                        productList.clear();
                         if (error != null) {
 
                             Log.e("Firestore error", error.getMessage());
@@ -130,9 +207,9 @@
                         for (DocumentChange dc : value.getDocumentChanges()) {
 
                             if (dc.getType() == DocumentChange.Type.ADDED) {
-                                brandList.add(dc.getDocument().toObject(ModelProduct.class));
+                                productList.add(dc.getDocument().toObject(ModelProduct.class));
                             }
-                            adapterProduct.notifyDataSetChanged();
+                            adapterProductSeller.notifyDataSetChanged();
                         }
 
                     }
@@ -145,10 +222,16 @@
         tabProductsTv.setBackgroundResource((R.drawable.shape_rect01));
     }
     private void checkUser() {
-        loadMyInfo();
+        FirebaseUser user = firebaseAuth.getCurrentUser();
+        if(user==null){
+            startActivity(new Intent(AdminViewProduct.this,SignInActivity.class));
+            finish();
+        }
+        else{
+            loadMyInfo();
+        }
     }
     private void loadMyInfo() {
-
         FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();
         DocumentReference reference;
         FirebaseFirestore firestore = FirebaseFirestore.getInstance();
@@ -157,12 +240,10 @@
             @Override
             public void onComplete(@NonNull Task<DocumentSnapshot> task) {
                 if (task.getResult().exists()) {
-
                     String nameResult = task.getResult().getString("userName");
                     String url = task.getResult().getString("profilePhoto");
                     String emailResult = task.getResult().getString("userEmail");
                     String phoneResult = task.getResult().getString("userPhone");
-
 //                    Picasso.get().load(url).into(profileIv);
                     nameTv.setText(nameResult);
                     emailTv.setText(emailResult);
@@ -179,6 +260,8 @@
     }
 
     private void makeMeOffline() {
-        startActivity(new Intent(AdminViewProduct.this, d4.class));
+        startActivity(new Intent(AdminViewProduct.this, LogoutActivity.class));
     }
+
+
 }
\ No newline at end of file
