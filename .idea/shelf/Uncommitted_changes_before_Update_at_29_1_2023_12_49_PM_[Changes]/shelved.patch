Index: .idea/deploymentTargetDropDown.xml
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
deleted file mode 100644
--- a/.idea/deploymentTargetDropDown.xml	(revision 600f03f897449a3336cc121ca15dd5e1cfe17b78)
+++ /dev/null	(revision 600f03f897449a3336cc121ca15dd5e1cfe17b78)
@@ -1,17 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="deploymentTargetDropDown">
-    <targetSelectedWithDropDown>
-      <Target>
-        <type value="QUICK_BOOT_TARGET" />
-        <deviceKey>
-          <Key>
-            <type value="VIRTUAL_DEVICE_PATH" />
-            <value value="C:\Users\nmnor\.android\avd\Pixel_2_API_26.avd" />
-          </Key>
-        </deviceKey>
-      </Target>
-    </targetSelectedWithDropDown>
-    <timeTargetWasSelectedWithDropDown value="2023-01-02T13:36:30.435480200Z" />
-  </component>
-</project>
\ No newline at end of file
Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	(revision 600f03f897449a3336cc121ca15dd5e1cfe17b78)
+++ /dev/null	(revision 600f03f897449a3336cc121ca15dd5e1cfe17b78)
@@ -1,3 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
Index: .idea/render.experimental.xml
===================================================================
diff --git a/.idea/render.experimental.xml b/.idea/render.experimental.xml
deleted file mode 100644
--- a/.idea/render.experimental.xml	(revision 600f03f897449a3336cc121ca15dd5e1cfe17b78)
+++ /dev/null	(revision 600f03f897449a3336cc121ca15dd5e1cfe17b78)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="RenderSettings">
-    <option name="showDecorations" value="true" />
-  </component>
-</project>
\ No newline at end of file
Index: app/src/main/java/com/example/gas4u/UserTrackingOrder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/gas4u/UserTrackingOrder.java b/app/src/main/java/com/example/gas4u/UserTrackingOrder.java
new file mode 100644
--- /dev/null	(date 1674967727394)
+++ b/app/src/main/java/com/example/gas4u/UserTrackingOrder.java	(date 1674967727394)
@@ -0,0 +1,123 @@
+package com.example.gas4u;
+
+import androidx.annotation.NonNull;
+import androidx.appcompat.app.AppCompatActivity;
+
+import android.os.Bundle;
+import android.widget.TextView;
+import android.widget.Toast;
+import android.content.Intent;
+import android.view.View;
+
+import com.example.gas4u.databinding.ActivityBrandBinding;
+import com.example.gas4u.databinding.ActivityBrandBinding;
+import com.example.gas4u.databinding.ActivityCartBinding;
+import com.google.android.gms.tasks.OnCompleteListener;
+import com.google.android.gms.tasks.OnFailureListener;
+import com.google.android.gms.tasks.OnSuccessListener;
+import com.google.android.gms.tasks.Task;
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.auth.FirebaseUser;
+import com.google.firebase.firestore.DocumentReference;
+import com.google.firebase.firestore.DocumentSnapshot;
+import com.google.firebase.firestore.FirebaseFirestore;
+
+import java.util.HashMap;
+import java.util.Objects;
+
+public class UserTrackingOrder extends DrawerBaseActivity {
+
+    UserTrackingOrderBinding userTrackingOrderBinding;
+
+    //initialize to extract from database (the green one must be exactly same with db)
+    private static final String productt = "Products";
+    private static final String quantityy = "Quantity";
+    private static final String totalpricee = "Total price";
+    private static final String Addresss = "Address";
+    private static final String shipstatus = "Order Status";
+
+    //declaration to read,authenticate from db
+    FirebaseAuth fa = FirebaseAuth.getInstance();
+    FirebaseFirestore db = FirebaseFirestore.getInstance();
+    FirebaseUser user = fa.getCurrentUser();
+
+    //Take from database (read from Order collection)
+    TextView orderid = findViewById(R.id.orderid);
+    TextView Products = findViewById(R.id.products);
+    TextView Address = findViewById(R.id.address);
+    TextView Quantity = findViewById(R.id.quantity);
+    TextView Tprice = findViewById(R.id.totalprice);
+    TextView ORDplace = findViewById(R.id.ordplace);
+
+    TextView ORDconfirm = findViewById(R.id.ordconfirm);
+    TextView ORDdelivery = findViewById(R.id.orddelivery);
+
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        userTrackingOrderBinding = UserTrackingOrderBinding.inflate(getLayoutInflater());
+        setContentView(userTrackingOrderBinding.getRoot());
+        allocateActivityTitle("Track Order");
+        setContentView(R.layout.activity_user_tracking_order);
+
+
+
+        DocumentReference docRef = db.collection("Order").document(user.getUid());
+        docRef.get()
+                .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {
+                    @Override
+                    public void onSuccess(DocumentSnapshot documentSnapshot) {
+                        if (documentSnapshot.exists()) {
+                            String product = documentSnapshot.getString(productt);
+                            String quantity = documentSnapshot.getString(quantityy);
+                            String address = documentSnapshot.getString(Addresss);
+                            String tprice = documentSnapshot.getString(totalpricee);
+                            String shipstat = documentSnapshot.getString(shipstatus);
+
+                            Products.setText("Products: " + product);
+                            Quantity.setText("Quantity: " + quantity);
+                            Tprice.setText("Total price: " + tprice);
+                            Address.setText("Address: " + address);
+
+
+                            if (Objects.equals(shipstat, "Ordered")){
+
+                                ORDplace.setText("Your order has been placed.");
+
+                            } else if (Objects.equals(shipstat, "confirmed")){
+
+                                ORDplace.setText("Your order has been placed!");
+                                ORDconfirm.setText("Your order has been confirmed!");
+
+                            } else if (Objects.equals(shipstat, "shipped")){
+
+                                ORDplace.setText("Your order has been placed!");
+                                ORDconfirm.setText("Your order has been confirmed!");
+                                ORDdelivery.setText("Your order is out for delivery!");
+
+                            } else {
+                                Toast.makeText(UserTrackingOrder.this, "ORDER NOT AVAILABLE!", Toast.LENGTH_SHORT).show();
+                            }
+
+
+                        } else {
+                            Toast.makeText(UserTrackingOrder.this, "NO ACTIVE ORDER", Toast.LENGTH_SHORT).show();
+                        }
+                    }
+
+                })
+                .addOnFailureListener(new OnFailureListener() {
+                    @Override
+                    public void onFailure(@NonNull Exception e) {
+                        Toast.makeText(UserTrackingOrder.this, "error!", Toast.LENGTH_SHORT).show();
+                    }
+                });
+
+
+
+    }
+
+}
+
+
Index: app/src/main/java/com/example/gas4u/viewmodel/AdapterProductUser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.gas4u.viewmodel;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.graphics.Paint;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Filter;\r\nimport android.widget.Filterable;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.gas4u.ModelProduct;\r\nimport com.example.gas4u.R;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport p32929.androideasysql_library.Column;\r\nimport p32929.androideasysql_library.EasyDB;\r\n\r\n\r\n\r\npublic class AdapterProductUser extends RecyclerView.Adapter<AdapterProductUser.HolderProductUser> implements Filterable {\r\n\r\n    private Context context;\r\n    public ArrayList<ModelProduct> productList, filterList;\r\n    private FilterProductUser filter;\r\n\r\n\r\n    public AdapterProductUser(Context context, ArrayList<ModelProduct> productList) {\r\n        this.context = context;\r\n        this.productList = productList;\r\n        this.filterList = productList;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public HolderProductUser onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        //inflate layout\r\n        View view = LayoutInflater.from(context).inflate(R.layout.row_product_user, parent, false);\r\n        return new HolderProductUser(view);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull HolderProductUser holder, int position) {\r\n        //get data\r\n        final ModelProduct modelProduct = productList.get(position);\r\n        String discountAvailable = modelProduct.getDiscountAvailable();\r\n        String discountNote = modelProduct.getDiscountNote();\r\n        String discountPrice = modelProduct.getDiscountPrice();\r\n        String productCategory = modelProduct.getProductCategory();\r\n        String originalPrice = modelProduct.getOriginalPrice();\r\n        String productDescription = modelProduct.getProductDescription();\r\n        String productTitle = modelProduct.getProductTitle();\r\n        String productQuantity = modelProduct.getProductQuantity();\r\n        String productId = modelProduct.getProductId();\r\n        String timestamp = modelProduct.getTimestamp();\r\n        String productIcon = modelProduct.getProductIcon();\r\n\r\n        //set data\r\n        holder.titleTv.setText(productTitle);\r\n        holder.discountedNoteTv.setText(discountNote);\r\n        holder.descriptionTv.setText(productDescription);\r\n        holder.originalPriceTv.setText(\"$\"+originalPrice);\r\n        holder.discountedPriceTv.setText(\"$\"+originalPrice);\r\n\r\n        if(discountAvailable.equals(\"true\")){\r\n\r\n            //product is on discount\r\n            holder.discountedPriceTv.setVisibility(View.VISIBLE);\r\n            holder.discountedNoteTv.setVisibility(View.VISIBLE);\r\n            holder.originalPriceTv.setPaintFlags(holder.originalPriceTv.getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG); // add strike through on original price\r\n\r\n        }\r\n        else {\r\n            //product is not on discount\r\n            holder.discountedPriceTv.setVisibility(View.GONE);\r\n            holder.discountedNoteTv.setVisibility(View.GONE);\r\n            holder.originalPriceTv.setPaintFlags(0);\r\n        }\r\n\r\n        try {\r\n            Picasso.get().load(productIcon.placeholder(R.drawable.shopping_cart).into(holder.productIconTv);\r\n        }\r\n        catch (Exception e){\r\n            holder.productIconTv.setImageResource(R.drawable.ic_add_shopping_primary);\r\n        }\r\n\r\n        holder.addToCartTv.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                //add product to cart\r\n                showQuantityDialog(modelProduct);\r\n\r\n            }\r\n            });\r\n\r\n        holder.addToCartTv.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v)  {\r\n                //show product details\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private double cost = 0;\r\n    private double finalCost = 0;\r\n    private int quantity = 0;\r\n    private void showQuantityDialog(ModelProduct modelProduct) {\r\n        //inflate layout for dialog\r\n        View view = LayoutInflater.from (context).inflate(R.layout.dialog_quantity, null);\r\n        //init layout view\r\n        ImageView product = view.findViewById(R.id.productIv);\r\n        TextView productIv  = view.findViewById(R.id.titleTv);\r\n        TextView pQuantity  = view.findViewById(R.id.pQuantityTv);\r\n        TextView descriptionTv  = view.findViewById(R.id.descriptionTv);\r\n        TextView discountNotedTv  = view.findViewById(R.id.discountedNoteTv);\r\n        TextView originalPriceTv  = view.findViewById(R.id.originalPriceTv);\r\n        TextView priceDiscountedTv  = view.findViewById(R.id.priceDiscountedTv);\r\n        TextView finalPriceTv  = view.findViewById(R.id.finalTv);\r\n        ImageButton decrementBtn  = view.findViewById(R.id.decrementBtn);\r\n        TextView quantityTv  = view.findViewById(R.id.quantityTv);\r\n        ImageButton incrementBtn  = view.findViewById(R.id.incrementBtn);\r\n        ImageButton continueBtn  = view.findViewById(R.id.continueBtn);\r\n\r\n        //get data from model\r\n        String  productId = modelProduct.getProductId();\r\n        String  title = modelProduct.getProductTitle();\r\n        String  productQuantity = modelProduct.getProductQuantity();\r\n        String  description = modelProduct.getProductDescription();\r\n        String  discountNote = modelProduct.getDiscountNote();\r\n        String  image = modelProduct.getProductIcon();\r\n\r\n        String price;\r\n        if(modelProduct.getDiscountPrice().equals(\"true\")){\r\n            //product have discount\r\n            price = modelProduct.getDiscountPrice();\r\n            discountedNoteTv.setVisibility(View.VISIBLE);\r\n            originalPriceTv.setPaintFlags(originalPriceTv.getPaintFlags()| Paint.STRIKE_THRU_TEXT_FLAG);//add strike through on original price\r\n        }\r\n        else{\r\n            //product dont have discount\r\n            discountNotedTv.setVisibility(View.GONE);\r\n            priceDiscountedTv.setVisibility(View.GONE);\r\n            price = modelProduct.getOriginalPrice();\r\n        }\r\n\r\n        cost = Double.parseDouble(price.replaceAll(\"$\",\"\"));\r\n        finalCost = Double.parseDouble(price.replaceAll(\"$\",\"\"));\r\n        quantity = 1;\r\n\r\n        //dialog\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(context);\r\n        builder.setView(view);\r\n\r\n        //set data\r\n        try {\r\n            Picasso.get().load(image).placeholder(R.drawable.ic_cart_gray).into(productIv);\r\n        }\r\n            catch (Exception e){\r\n                productIv.setImageResource(R.drawable.ic_cart_gray);\r\n            }\r\n        titleTv.setText(\"\"+title);\r\n        pQuantityTv.setText(\"\"+productQuantity);\r\n        descriptionTv.setText(\"\"+description);\r\n        discountNotedTv.setText(\"\"+discountNote);\r\n        quantityTv.setText(\"\"+quantityTv);\r\n        originalPriceTv.setText(\"$\"+ modelProduct.getOriginalPrice());\r\n        priceDiscountedTv.setText(\"$\"+ modelProduct.getDiscountPrice());\r\n        finalPriceTv.setText(\"$\"+ finalCost);\r\n\r\n        AlertDialog dialog= builder.create();\r\n        dialog.show();\r\n\r\n        //increase quantity of the product\r\n        incrementBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                finalCost = finalCost + cost;\r\n                quantity++;\r\n\r\n                finalPriceTv.setText(\"$\"+finalCost);\r\n                quantityTv.setText(\"\"+ quantity);\r\n            }\r\n        });\r\n\r\n        // decrement quantity of product, only if quantity is >1\r\n        decrementBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (quantity>1){\r\n                    finalCost = finalCost - cost;\r\n                    quantity--;\r\n\r\n                    finalPriceTv.setText(\"$\"+finalCost);\r\n                    quantityTv.setText(\"\"+quantity);\r\n                }\r\n            }\r\n        });\r\n        continueBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                String title = titleTv.getText().toString().trial();\r\n                String priceEach = originalPriceTv.getText().toString().trim().replace(\"$\",\"\" );\r\n                String price = finalPriceTv.getText().toString().trim().replace(\"$\",\"\" );\r\n                String quantity = quantityTv.getText().toString().trim();\r\n\r\n                addtoCart(productId, title, priceEach, price, quantity);\r\n\r\n                dialog.dismiss();\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    private int itemId = 1;\r\n    private void addtoCart(String productId, String title, String priceEach, String price, String quantity) {\r\n        itemId++;\r\n\r\n        EasyDb easyDb = EasyDb.init(context,\"ITEMS_DB\")\r\n                .setTableName(\"ITEM_TABLE\")\r\n                .addColumn(new Column(\"item_Id\", new String(){\"text\",\"unique\"}))\r\n                .addColumn(new Column(\"Item_PID\", new String[]{\"text\", \"not null\"}))\r\n                .addColumn(new Column(\"Item_Name\", new String[]{\"text\", \"not null\"}))\r\n                .addColumn(new Column(\"Item_Price_Each\", new String[]{\"text\", \"not null\"}))\r\n                .addColumn(new Column(\"Item_Price\", new String[]{\"text\", \"not null\"}))\r\n                .addColumn(new Column(\"Item_Quantity\", new String[]{\"text\", \"not null\"}))\r\n                .doneTableColumn();\r\n\r\n        Boolean b = easyDb.addData(\"Item_Id\", itemId)\r\n                .addData(\"Item_PId\", productId)\r\n                .addData(\"Item_Name\", title)\r\n                .addData(\"Item_Price_Each\", priceEach)\r\n                .addData(\"Item_Price\", price)\r\n                .addData(\"Item_Quantity\", quantity)\r\n                .doneDataAdding();\r\n\r\n        Toast.makeText(context, \"Added to cart...\", Toast.LENGTH_SHORT).show();\r\n\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return productList.size();\r\n    }\r\n\r\n    @Override\r\n    public Filter getFilter() {\r\n        if (filter == null){\r\n            filter = new FilterProductUser(this, filterList);\r\n        }\r\n        return filter;\r\n    }\r\n\r\n    class HolderProductUser extends RecyclerView.ViewHolder{\r\n\r\n        //ui views\r\n        private ImageView productIconTv;\r\n        private TextView discountedNoteTv, titleTv, descriptionTv, addToCartTv, discountedPriceTv, originalPriceTv;\r\n\r\n        public HolderProductUser (@NonNull View itemView) {\r\n            super(itemView);\r\n\r\n            //init ui views\r\n            productIconTv = itemView.findViewById(R.id.productIconTv);\r\n            discountedNoteTv = itemView.findViewById(R.id.discountedNoteTv);\r\n            titleTv = itemView.findViewById(R.id.titleTv);\r\n            descriptionTv = itemView.findViewById(R.id.descriptionTv);\r\n            addToCartTv = itemView.findViewById(R.id.addToCartTv);\r\n            discountedPriceTv = itemView.findViewById(R.id.discountedPriceTv);\r\n            originalPriceTv = itemView.findViewById(R.id.originalPriceTv);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/gas4u/viewmodel/AdapterProductUser.java b/app/src/main/java/com/example/gas4u/viewmodel/AdapterProductUser.java
--- a/app/src/main/java/com/example/gas4u/viewmodel/AdapterProductUser.java	(revision 600f03f897449a3336cc121ca15dd5e1cfe17b78)
+++ b/app/src/main/java/com/example/gas4u/viewmodel/AdapterProductUser.java	(date 1674966613601)
@@ -1,285 +1,285 @@
-package com.example.gas4u.viewmodel;
-
-import android.app.AlertDialog;
-import android.content.Context;
-import android.graphics.Paint;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.Filter;
-import android.widget.Filterable;
-import android.widget.ImageButton;
-import android.widget.ImageView;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import androidx.annotation.NonNull;
-import androidx.recyclerview.widget.RecyclerView;
-
-import com.example.gas4u.ModelProduct;
-import com.example.gas4u.R;
-import com.squareup.picasso.Picasso;
-
-import java.util.ArrayList;
-
-import p32929.androideasysql_library.Column;
-import p32929.androideasysql_library.EasyDB;
-
-
-
-public class AdapterProductUser extends RecyclerView.Adapter<AdapterProductUser.HolderProductUser> implements Filterable {
-
-    private Context context;
-    public ArrayList<ModelProduct> productList, filterList;
-    private FilterProductUser filter;
-
-
-    public AdapterProductUser(Context context, ArrayList<ModelProduct> productList) {
-        this.context = context;
-        this.productList = productList;
-        this.filterList = productList;
-    }
-
-    @NonNull
-    @Override
-    public HolderProductUser onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
-        //inflate layout
-        View view = LayoutInflater.from(context).inflate(R.layout.row_product_user, parent, false);
-        return new HolderProductUser(view);
-    }
-
-    @Override
-    public void onBindViewHolder(@NonNull HolderProductUser holder, int position) {
-        //get data
-        final ModelProduct modelProduct = productList.get(position);
-        String discountAvailable = modelProduct.getDiscountAvailable();
-        String discountNote = modelProduct.getDiscountNote();
-        String discountPrice = modelProduct.getDiscountPrice();
-        String productCategory = modelProduct.getProductCategory();
-        String originalPrice = modelProduct.getOriginalPrice();
-        String productDescription = modelProduct.getProductDescription();
-        String productTitle = modelProduct.getProductTitle();
-        String productQuantity = modelProduct.getProductQuantity();
-        String productId = modelProduct.getProductId();
-        String timestamp = modelProduct.getTimestamp();
-        String productIcon = modelProduct.getProductIcon();
-
-        //set data
-        holder.titleTv.setText(productTitle);
-        holder.discountedNoteTv.setText(discountNote);
-        holder.descriptionTv.setText(productDescription);
-        holder.originalPriceTv.setText("$"+originalPrice);
-        holder.discountedPriceTv.setText("$"+originalPrice);
-
-        if(discountAvailable.equals("true")){
-
-            //product is on discount
-            holder.discountedPriceTv.setVisibility(View.VISIBLE);
-            holder.discountedNoteTv.setVisibility(View.VISIBLE);
-            holder.originalPriceTv.setPaintFlags(holder.originalPriceTv.getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG); // add strike through on original price
-
-        }
-        else {
-            //product is not on discount
-            holder.discountedPriceTv.setVisibility(View.GONE);
-            holder.discountedNoteTv.setVisibility(View.GONE);
-            holder.originalPriceTv.setPaintFlags(0);
-        }
-
-        try {
-            Picasso.get().load(productIcon.placeholder(R.drawable.shopping_cart).into(holder.productIconTv);
-        }
-        catch (Exception e){
-            holder.productIconTv.setImageResource(R.drawable.ic_add_shopping_primary);
-        }
-
-        holder.addToCartTv.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                //add product to cart
-                showQuantityDialog(modelProduct);
-
-            }
-            });
-
-        holder.addToCartTv.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v)  {
-                //show product details
-            }
-        });
-
-
-    }
-
-    private double cost = 0;
-    private double finalCost = 0;
-    private int quantity = 0;
-    private void showQuantityDialog(ModelProduct modelProduct) {
-        //inflate layout for dialog
-        View view = LayoutInflater.from (context).inflate(R.layout.dialog_quantity, null);
-        //init layout view
-        ImageView product = view.findViewById(R.id.productIv);
-        TextView productIv  = view.findViewById(R.id.titleTv);
-        TextView pQuantity  = view.findViewById(R.id.pQuantityTv);
-        TextView descriptionTv  = view.findViewById(R.id.descriptionTv);
-        TextView discountNotedTv  = view.findViewById(R.id.discountedNoteTv);
-        TextView originalPriceTv  = view.findViewById(R.id.originalPriceTv);
-        TextView priceDiscountedTv  = view.findViewById(R.id.priceDiscountedTv);
-        TextView finalPriceTv  = view.findViewById(R.id.finalTv);
-        ImageButton decrementBtn  = view.findViewById(R.id.decrementBtn);
-        TextView quantityTv  = view.findViewById(R.id.quantityTv);
-        ImageButton incrementBtn  = view.findViewById(R.id.incrementBtn);
-        ImageButton continueBtn  = view.findViewById(R.id.continueBtn);
-
-        //get data from model
-        String  productId = modelProduct.getProductId();
-        String  title = modelProduct.getProductTitle();
-        String  productQuantity = modelProduct.getProductQuantity();
-        String  description = modelProduct.getProductDescription();
-        String  discountNote = modelProduct.getDiscountNote();
-        String  image = modelProduct.getProductIcon();
-
-        String price;
-        if(modelProduct.getDiscountPrice().equals("true")){
-            //product have discount
-            price = modelProduct.getDiscountPrice();
-            discountedNoteTv.setVisibility(View.VISIBLE);
-            originalPriceTv.setPaintFlags(originalPriceTv.getPaintFlags()| Paint.STRIKE_THRU_TEXT_FLAG);//add strike through on original price
-        }
-        else{
-            //product dont have discount
-            discountNotedTv.setVisibility(View.GONE);
-            priceDiscountedTv.setVisibility(View.GONE);
-            price = modelProduct.getOriginalPrice();
-        }
-
-        cost = Double.parseDouble(price.replaceAll("$",""));
-        finalCost = Double.parseDouble(price.replaceAll("$",""));
-        quantity = 1;
-
-        //dialog
-        AlertDialog.Builder builder = new AlertDialog.Builder(context);
-        builder.setView(view);
-
-        //set data
-        try {
-            Picasso.get().load(image).placeholder(R.drawable.ic_cart_gray).into(productIv);
-        }
-            catch (Exception e){
-                productIv.setImageResource(R.drawable.ic_cart_gray);
-            }
-        titleTv.setText(""+title);
-        pQuantityTv.setText(""+productQuantity);
-        descriptionTv.setText(""+description);
-        discountNotedTv.setText(""+discountNote);
-        quantityTv.setText(""+quantityTv);
-        originalPriceTv.setText("$"+ modelProduct.getOriginalPrice());
-        priceDiscountedTv.setText("$"+ modelProduct.getDiscountPrice());
-        finalPriceTv.setText("$"+ finalCost);
-
-        AlertDialog dialog= builder.create();
-        dialog.show();
-
-        //increase quantity of the product
-        incrementBtn.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                finalCost = finalCost + cost;
-                quantity++;
-
-                finalPriceTv.setText("$"+finalCost);
-                quantityTv.setText(""+ quantity);
-            }
-        });
-
-        // decrement quantity of product, only if quantity is >1
-        decrementBtn.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                if (quantity>1){
-                    finalCost = finalCost - cost;
-                    quantity--;
-
-                    finalPriceTv.setText("$"+finalCost);
-                    quantityTv.setText(""+quantity);
-                }
-            }
-        });
-        continueBtn.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                String title = titleTv.getText().toString().trial();
-                String priceEach = originalPriceTv.getText().toString().trim().replace("$","" );
-                String price = finalPriceTv.getText().toString().trim().replace("$","" );
-                String quantity = quantityTv.getText().toString().trim();
-
-                addtoCart(productId, title, priceEach, price, quantity);
-
-                dialog.dismiss();
-
-            }
-        });
-    }
-
-    private int itemId = 1;
-    private void addtoCart(String productId, String title, String priceEach, String price, String quantity) {
-        itemId++;
-
-        EasyDb easyDb = EasyDb.init(context,"ITEMS_DB")
-                .setTableName("ITEM_TABLE")
-                .addColumn(new Column("item_Id", new String(){"text","unique"}))
-                .addColumn(new Column("Item_PID", new String[]{"text", "not null"}))
-                .addColumn(new Column("Item_Name", new String[]{"text", "not null"}))
-                .addColumn(new Column("Item_Price_Each", new String[]{"text", "not null"}))
-                .addColumn(new Column("Item_Price", new String[]{"text", "not null"}))
-                .addColumn(new Column("Item_Quantity", new String[]{"text", "not null"}))
-                .doneTableColumn();
-
-        Boolean b = easyDb.addData("Item_Id", itemId)
-                .addData("Item_PId", productId)
-                .addData("Item_Name", title)
-                .addData("Item_Price_Each", priceEach)
-                .addData("Item_Price", price)
-                .addData("Item_Quantity", quantity)
-                .doneDataAdding();
-
-        Toast.makeText(context, "Added to cart...", Toast.LENGTH_SHORT).show();
-
-
-    }
-
-
-    @Override
-    public int getItemCount() {
-        return productList.size();
-    }
-
-    @Override
-    public Filter getFilter() {
-        if (filter == null){
-            filter = new FilterProductUser(this, filterList);
-        }
-        return filter;
-    }
-
-    class HolderProductUser extends RecyclerView.ViewHolder{
-
-        //ui views
-        private ImageView productIconTv;
-        private TextView discountedNoteTv, titleTv, descriptionTv, addToCartTv, discountedPriceTv, originalPriceTv;
-
-        public HolderProductUser (@NonNull View itemView) {
-            super(itemView);
-
-            //init ui views
-            productIconTv = itemView.findViewById(R.id.productIconTv);
-            discountedNoteTv = itemView.findViewById(R.id.discountedNoteTv);
-            titleTv = itemView.findViewById(R.id.titleTv);
-            descriptionTv = itemView.findViewById(R.id.descriptionTv);
-            addToCartTv = itemView.findViewById(R.id.addToCartTv);
-            discountedPriceTv = itemView.findViewById(R.id.discountedPriceTv);
-            originalPriceTv = itemView.findViewById(R.id.originalPriceTv);
-        }
-    }
-}
+//package com.example.gas4u.viewmodel;
+//
+//import android.app.AlertDialog;
+//import android.content.Context;
+//import android.graphics.Paint;
+//import android.view.LayoutInflater;
+//import android.view.View;
+//import android.view.ViewGroup;
+//import android.widget.Filter;
+//import android.widget.Filterable;
+//import android.widget.ImageButton;
+//import android.widget.ImageView;
+//import android.widget.TextView;
+//import android.widget.Toast;
+//
+//import androidx.annotation.NonNull;
+//import androidx.recyclerview.widget.RecyclerView;
+//
+//import com.example.gas4u.ModelProduct;
+//import com.example.gas4u.R;
+//import com.squareup.picasso.Picasso;
+//
+//import java.util.ArrayList;
+//
+//import p32929.androideasysql_library.Column;
+//import p32929.androideasysql_library.EasyDB;
+//
+//
+//
+//public class AdapterProductUser extends RecyclerView.Adapter<AdapterProductUser.HolderProductUser> implements Filterable {
+//
+//    private Context context;
+//    public ArrayList<ModelProduct> productList, filterList;
+//    private FilterProductUser filter;
+//
+//
+//    public AdapterProductUser(Context context, ArrayList<ModelProduct> productList) {
+//        this.context = context;
+//        this.productList = productList;
+//        this.filterList = productList;
+//    }
+//
+//    @NonNull
+//    @Override
+//    public HolderProductUser onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
+//        //inflate layout
+//        View view = LayoutInflater.from(context).inflate(R.layout.row_product_user, parent, false);
+//        return new HolderProductUser(view);
+//    }
+//
+//    @Override
+//    public void onBindViewHolder(@NonNull HolderProductUser holder, int position) {
+//        //get data
+//        final ModelProduct modelProduct = productList.get(position);
+//        String discountAvailable = modelProduct.getDiscountAvailable();
+//        String discountNote = modelProduct.getDiscountNote();
+//        String discountPrice = modelProduct.getDiscountPrice();
+//        String productCategory = modelProduct.getProductCategory();
+//        String originalPrice = modelProduct.getOriginalPrice();
+//        String productDescription = modelProduct.getProductDescription();
+//        String productTitle = modelProduct.getProductTitle();
+//        String productQuantity = modelProduct.getProductQuantity();
+//        String productId = modelProduct.getProductId();
+//        String timestamp = modelProduct.getTimestamp();
+//        String productIcon = modelProduct.getProductIcon();
+//
+//        //set data
+//        holder.titleTv.setText(productTitle);
+//        holder.discountedNoteTv.setText(discountNote);
+//        holder.descriptionTv.setText(productDescription);
+//        holder.originalPriceTv.setText("$"+originalPrice);
+//        holder.discountedPriceTv.setText("$"+originalPrice);
+//
+//        if(discountAvailable.equals("true")){
+//
+//            //product is on discount
+//            holder.discountedPriceTv.setVisibility(View.VISIBLE);
+//            holder.discountedNoteTv.setVisibility(View.VISIBLE);
+//            holder.originalPriceTv.setPaintFlags(holder.originalPriceTv.getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG); // add strike through on original price
+//
+//        }
+//        else {
+//            //product is not on discount
+//            holder.discountedPriceTv.setVisibility(View.GONE);
+//            holder.discountedNoteTv.setVisibility(View.GONE);
+//            holder.originalPriceTv.setPaintFlags(0);
+//        }
+//
+//        try {
+//            Picasso.get().load(productIcon.placeholder(R.drawable.shopping_cart).into(holder.productIconTv);
+//        }
+//        catch (Exception e){
+//            holder.productIconTv.setImageResource(R.drawable.ic_add_shopping_primary);
+//        }
+//
+//        holder.addToCartTv.setOnClickListener(new View.OnClickListener() {
+//            @Override
+//            public void onClick(View v) {
+//                //add product to cart
+//                showQuantityDialog(modelProduct);
+//
+//            }
+//            });
+//
+//        holder.addToCartTv.setOnClickListener(new View.OnClickListener() {
+//            @Override
+//            public void onClick(View v)  {
+//                //show product details
+//            }
+//        });
+//
+//
+//    }
+//
+//    private double cost = 0;
+//    private double finalCost = 0;
+//    private int quantity = 0;
+//    private void showQuantityDialog(ModelProduct modelProduct) {
+//        //inflate layout for dialog
+//        View view = LayoutInflater.from (context).inflate(R.layout.dialog_quantity, null);
+//        //init layout view
+//        ImageView product = view.findViewById(R.id.productIv);
+//        TextView productIv  = view.findViewById(R.id.titleTv);
+//        TextView pQuantity  = view.findViewById(R.id.pQuantityTv);
+//        TextView descriptionTv  = view.findViewById(R.id.descriptionTv);
+//        TextView discountNotedTv  = view.findViewById(R.id.discountedNoteTv);
+//        TextView originalPriceTv  = view.findViewById(R.id.originalPriceTv);
+//        TextView priceDiscountedTv  = view.findViewById(R.id.priceDiscountedTv);
+//        TextView finalPriceTv  = view.findViewById(R.id.finalTv);
+//        ImageButton decrementBtn  = view.findViewById(R.id.decrementBtn);
+//        TextView quantityTv  = view.findViewById(R.id.quantityTv);
+//        ImageButton incrementBtn  = view.findViewById(R.id.incrementBtn);
+//        ImageButton continueBtn  = view.findViewById(R.id.continueBtn);
+//
+//        //get data from model
+//        String  productId = modelProduct.getProductId();
+//        String  title = modelProduct.getProductTitle();
+//        String  productQuantity = modelProduct.getProductQuantity();
+//        String  description = modelProduct.getProductDescription();
+//        String  discountNote = modelProduct.getDiscountNote();
+//        String  image = modelProduct.getProductIcon();
+//
+//        String price;
+//        if(modelProduct.getDiscountPrice().equals("true")){
+//            //product have discount
+//            price = modelProduct.getDiscountPrice();
+//            discountedNoteTv.setVisibility(View.VISIBLE);
+//            originalPriceTv.setPaintFlags(originalPriceTv.getPaintFlags()| Paint.STRIKE_THRU_TEXT_FLAG);//add strike through on original price
+//        }
+//        else{
+//            //product dont have discount
+//            discountNotedTv.setVisibility(View.GONE);
+//            priceDiscountedTv.setVisibility(View.GONE);
+//            price = modelProduct.getOriginalPrice();
+//        }
+//
+//        cost = Double.parseDouble(price.replaceAll("$",""));
+//        finalCost = Double.parseDouble(price.replaceAll("$",""));
+//        quantity = 1;
+//
+//        //dialog
+//        AlertDialog.Builder builder = new AlertDialog.Builder(context);
+//        builder.setView(view);
+//
+//        //set data
+//        try {
+//            Picasso.get().load(image).placeholder(R.drawable.ic_cart_gray).into(productIv);
+//        }
+//            catch (Exception e){
+//                productIv.setImageResource(R.drawable.ic_cart_gray);
+//            }
+//        titleTv.setText(""+title);
+//        pQuantityTv.setText(""+productQuantity);
+//        descriptionTv.setText(""+description);
+//        discountNotedTv.setText(""+discountNote);
+//        quantityTv.setText(""+quantityTv);
+//        originalPriceTv.setText("$"+ modelProduct.getOriginalPrice());
+//        priceDiscountedTv.setText("$"+ modelProduct.getDiscountPrice());
+//        finalPriceTv.setText("$"+ finalCost);
+//
+//        AlertDialog dialog= builder.create();
+//        dialog.show();
+//
+//        //increase quantity of the product
+//        incrementBtn.setOnClickListener(new View.OnClickListener() {
+//            @Override
+//            public void onClick(View view) {
+//                finalCost = finalCost + cost;
+//                quantity++;
+//
+//                finalPriceTv.setText("$"+finalCost);
+//                quantityTv.setText(""+ quantity);
+//            }
+//        });
+//
+//        // decrement quantity of product, only if quantity is >1
+//        decrementBtn.setOnClickListener(new View.OnClickListener() {
+//            @Override
+//            public void onClick(View v) {
+//                if (quantity>1){
+//                    finalCost = finalCost - cost;
+//                    quantity--;
+//
+//                    finalPriceTv.setText("$"+finalCost);
+//                    quantityTv.setText(""+quantity);
+//                }
+//            }
+//        });
+//        continueBtn.setOnClickListener(new View.OnClickListener() {
+//            @Override
+//            public void onClick(View v) {
+//                String title = titleTv.getText().toString().trial();
+//                String priceEach = originalPriceTv.getText().toString().trim().replace("$","" );
+//                String price = finalPriceTv.getText().toString().trim().replace("$","" );
+//                String quantity = quantityTv.getText().toString().trim();
+//
+//                addtoCart(productId, title, priceEach, price, quantity);
+//
+//                dialog.dismiss();
+//
+//            }
+//        });
+//    }
+//
+//    private int itemId = 1;
+//    private void addtoCart(String productId, String title, String priceEach, String price, String quantity) {
+//        itemId++;
+//
+//        EasyDb easyDb = EasyDb.init(context,"ITEMS_DB")
+//                .setTableName("ITEM_TABLE")
+//                .addColumn(new Column("item_Id", new String(){"text","unique"}))
+//                .addColumn(new Column("Item_PID", new String[]{"text", "not null"}))
+//                .addColumn(new Column("Item_Name", new String[]{"text", "not null"}))
+//                .addColumn(new Column("Item_Price_Each", new String[]{"text", "not null"}))
+//                .addColumn(new Column("Item_Price", new String[]{"text", "not null"}))
+//                .addColumn(new Column("Item_Quantity", new String[]{"text", "not null"}))
+//                .doneTableColumn();
+//
+//        Boolean b = easyDb.addData("Item_Id", itemId)
+//                .addData("Item_PId", productId)
+//                .addData("Item_Name", title)
+//                .addData("Item_Price_Each", priceEach)
+//                .addData("Item_Price", price)
+//                .addData("Item_Quantity", quantity)
+//                .doneDataAdding();
+//
+//        Toast.makeText(context, "Added to cart...", Toast.LENGTH_SHORT).show();
+//
+//
+//    }
+//
+//
+//    @Override
+//    public int getItemCount() {
+//        return productList.size();
+//    }
+//
+//    @Override
+//    public Filter getFilter() {
+//        if (filter == null){
+//            filter = new FilterProductUser(this, filterList);
+//        }
+//        return filter;
+//    }
+//
+//    class HolderProductUser extends RecyclerView.ViewHolder{
+//
+//        //ui views
+//        private ImageView productIconTv;
+//        private TextView discountedNoteTv, titleTv, descriptionTv, addToCartTv, discountedPriceTv, originalPriceTv;
+//
+//        public HolderProductUser (@NonNull View itemView) {
+//            super(itemView);
+//
+//            //init ui views
+//            productIconTv = itemView.findViewById(R.id.productIconTv);
+//            discountedNoteTv = itemView.findViewById(R.id.discountedNoteTv);
+//            titleTv = itemView.findViewById(R.id.titleTv);
+//            descriptionTv = itemView.findViewById(R.id.descriptionTv);
+//            addToCartTv = itemView.findViewById(R.id.addToCartTv);
+//            discountedPriceTv = itemView.findViewById(R.id.discountedPriceTv);
+//            originalPriceTv = itemView.findViewById(R.id.originalPriceTv);
+//        }
+//    }
+//}
Index: app/src/main/res/drawable/shape_status_current.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/shape_status_current.xml b/app/src/main/res/drawable/shape_status_current.xml
new file mode 100644
--- /dev/null	(date 1674966615387)
+++ b/app/src/main/res/drawable/shape_status_current.xml	(date 1674966615387)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="oval">
+    <solid android:color="@color/colorAccent"/>
+</shape>
\ No newline at end of file
Index: app/src/main/java/com/example/gas4u/CartActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.gas4u;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.gas4u.databinding.ActivityCartBinding;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Objects;\r\n\r\npublic class CartActivity extends DrawerBaseActivity {\r\n\r\n    private static final String userName = \"userName\";\r\n    private static final String userPhone = \"userPhone\";\r\n    private static final String userAddress = \"userAddress\";\r\n\r\n\r\n    FirebaseAuth fa = FirebaseAuth.getInstance();\r\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n\r\n    ActivityCartBinding activityCartBinding;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        activityCartBinding = ActivityCartBinding.inflate(getLayoutInflater());\r\n        setContentView(activityCartBinding.getRoot());\r\n        allocateActivityTitle(\"Carts\");\r\n\r\n    }\r\n\r\n    public void placeorder(View v){\r\n\r\n\r\n\r\n        final String[] fonts = {\r\n                \"Default Address\", \"New Address\"\r\n        };\r\n\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(CartActivity.this);\r\n        builder.setTitle(\"Please choose the address\");\r\n        builder.setItems(fonts, new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n            if (\"Default Address\".equals(fonts[which])) {\r\n\r\n\r\n                FirebaseUser user = fa.getCurrentUser();\r\n                DocumentReference docRef = db.collection(\"Customers\").document(user.getUid());\r\n                docRef.get()\r\n                        .addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                            @Override\r\n                            public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                                if (documentSnapshot.exists()){\r\n                                    String name = documentSnapshot.getString(userName);\r\n                                    String phone = documentSnapshot.getString(userPhone);\r\n                                    String address = documentSnapshot.getString(userAddress);\r\n                                    String shipstatus = \"Ordered\";\r\n\r\n\r\n                                    String timestamp = \"\"+System.currentTimeMillis();\r\n                                    FirebaseUser user = fa.getCurrentUser();\r\n\r\n                                    //setup data to upload\r\n                                    HashMap<String, Object> hashMap = new HashMap<>();\r\n                                    hashMap.put(\"productId\", \"\"+timestamp);\r\n                                    hashMap.put(\"Receiver Name: \", name);\r\n                                    hashMap.put(\"Phone Number\", phone);\r\n                                    hashMap.put(\"Address\", address);\r\n                                    hashMap.put(\"Order Status\", shipstatus);\r\n                                    hashMap.put(\"timestamp\", timestamp);\r\n                                    hashMap.put(\"uid\", db.collection(\"Order\").document(user.getUid()));\r\n\r\n                                    //add to db\r\n                                    db.collection(\"Order\").document(user.getUid())\r\n                                            .set(hashMap).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                                                @Override\r\n                                                public void onComplete(@NonNull Task<Void> task) {\r\n                                                    if(task.isSuccessful()){\r\n                                                        //added to db\r\n                                                        Toast.makeText(CartActivity.this, \"Order placed...\", Toast.LENGTH_SHORT).show();\r\n                                                        //clearData();\r\n                                                    }\r\n                                                }\r\n                                            })\r\n                                            .addOnFailureListener(new OnFailureListener() {\r\n                                                @Override\r\n                                                public void onFailure(@NonNull Exception e) {\r\n                                                    Toast.makeText(CartActivity.this, \"\"+e.getMessage(), Toast.LENGTH_SHORT).show();\r\n                                                }\r\n                                            });\r\n\r\n\r\n\r\n\r\n                                } else {\r\n                                    Toast.makeText(CartActivity.this, \"ORDER PLACEMENT FAILED!\", Toast.LENGTH_SHORT).show();\r\n                                }\r\n\r\n                            }\r\n                        })\r\n                        .addOnFailureListener(new OnFailureListener() {\r\n                            @Override\r\n                            public void onFailure(@NonNull Exception e) {\r\n                                Toast.makeText(CartActivity.this, \"error!\", Toast.LENGTH_SHORT).show();\r\n                            }\r\n                        });\r\n\r\n               // Toast.makeText(CartActivity.this, \"you nailed it\", Toast.LENGTH_SHORT).show();\r\n            } else if (\"New Address\".equals(fonts[which])) {\r\n\r\n                Intent intent2 = new Intent(getBaseContext(), PlaceOrderActivity.class);\r\n                startActivity(intent2);\r\n            }\r\n\r\n        }\r\n        });\r\n        builder.show();\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n//if (Objects.equals(role, user.getUid())){\r\n//\r\n//        if (Objects.equals(entr_stat, \"in\")){\r\n//\r\n//\r\n//            txtTesting.setText(\"GOOD NEWS!\");\r\n//            txtTesting2.setText(\"We are happy to say that MR/MRS\" + name + \" is available at the faculty.\");\r\n//\r\n//        } else {\r\n//\r\n//            txtTesting.setText(\"SAD NEWS!\");\r\n//            txtTesting2.setText(\"We are sadly to say that MR/MRS \" + name + \" is not available at the faculty.\");\r\n//        }\r\n//\r\n//    } else{\r\n//\r\n//        txtTesting.setText(\"SAD NEWS!\");\r\n//        txtTesting2.setText(\"We are sadly to say that MR/MRS \" + name + \" is not a lecturer\");\r\n//\r\n//    }\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/gas4u/CartActivity.java b/app/src/main/java/com/example/gas4u/CartActivity.java
--- a/app/src/main/java/com/example/gas4u/CartActivity.java	(revision 600f03f897449a3336cc121ca15dd5e1cfe17b78)
+++ b/app/src/main/java/com/example/gas4u/CartActivity.java	(date 1674966612509)
@@ -77,14 +77,23 @@
                                     String timestamp = ""+System.currentTimeMillis();
                                     FirebaseUser user = fa.getCurrentUser();
 
-                                    //setup data to upload
+                                    //setup data to upload for default address
                                     HashMap<String, Object> hashMap = new HashMap<>();
-                                    hashMap.put("productId", ""+timestamp);
+                                   // hashMap.put("productId", ""+timestamp);
                                     hashMap.put("Receiver Name: ", name);
                                     hashMap.put("Phone Number", phone);
                                     hashMap.put("Address", address);
                                     hashMap.put("Order Status", shipstatus);
-                                    hashMap.put("timestamp", timestamp);
+
+                                    //dummy
+                                    String products = "Petron 14kg";
+                                    String quantity = "1";
+                                    String totalprice = "25.00";
+
+                                    hashMap.put("Products", products);
+                                    hashMap.put("Quantity", quantity);
+                                    hashMap.put("Total Price", totalprice);
+                                    //hashMap.put("timestamp", timestamp);
                                     hashMap.put("uid", db.collection("Order").document(user.getUid()));
 
                                     //add to db
Index: app/src/main/java/com/example/gas4u/DrawerBaseActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.gas4u;\r\n\r\nimport androidx.annotation.NonNull;\r\n        import androidx.appcompat.app.ActionBarDrawerToggle;\r\n        import androidx.appcompat.app.AppCompatActivity;\r\n        import androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\n\r\nimport android.content.Intent;\r\nimport android.view.MenuItem;\r\n        import android.view.View;\r\n        import android.widget.FrameLayout;\r\n\r\n        import com.google.android.material.navigation.NavigationView;\r\n\r\npublic class DrawerBaseActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {\r\n\r\n    DrawerLayout drawerLayout;\r\n\r\n    @Override\r\n    public void setContentView(View view) {\r\n        drawerLayout = (DrawerLayout) getLayoutInflater().inflate(R.layout.activity_drawer_base, null);\r\n        FrameLayout container = drawerLayout.findViewById(R.id.activityContainer);\r\n        container.addView(view);\r\n        super.setContentView(drawerLayout);\r\n\r\n        Toolbar toolbar = drawerLayout.findViewById(R.id.toolBar);\r\n        setSupportActionBar(toolbar);\r\n\r\n        NavigationView navigationView = drawerLayout.findViewById(R.id.nav_view);\r\n        navigationView.setNavigationItemSelectedListener(this);\r\n\r\n        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this, drawerLayout, toolbar, R.string.menu_drawer_open, R.string.menu_drawer_close);\r\n        drawerLayout.addDrawerListener(toggle);\r\n        toggle.syncState();\r\n    }\r\n\r\n\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n        drawerLayout.closeDrawer(GravityCompat.START);\r\n\r\n        switch (item.getItemId()){\r\n            case R.id.nav_brand:\r\n                startActivity(new Intent(this, BrandActivity.class));\r\n                overridePendingTransition(0,0);\r\n                break;\r\n            case R.id.nav_shopping_bag:\r\n                startActivity(new Intent(this, OrderActivity.class));\r\n                overridePendingTransition(0,0);\r\n                break;\r\n            case R.id.nav_shopping_cart:\r\n                startActivity(new Intent(this, CartActivity.class));\r\n                overridePendingTransition(0,0);\r\n                break;\r\n            case R.id.nav_user_profile:\r\n                startActivity(new Intent(this, CustomerProfileActivity.class));\r\n                overridePendingTransition(0,0);\r\n                break;\r\n            case R.id.nav_helpline:\r\n                startActivity(new Intent(this, ViewHelplineActivity.class));\r\n                overridePendingTransition(0,0);\r\n                break;\r\n            case R.id.nav_logout:\r\n                startActivity(new Intent(this, LogoutActivity.class));\r\n                break;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    protected void allocateActivityTitle(String titleString){\r\n        if (getSupportActionBar() != null){\r\n            getSupportActionBar().setTitle(titleString);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/gas4u/DrawerBaseActivity.java b/app/src/main/java/com/example/gas4u/DrawerBaseActivity.java
--- a/app/src/main/java/com/example/gas4u/DrawerBaseActivity.java	(revision 600f03f897449a3336cc121ca15dd5e1cfe17b78)
+++ b/app/src/main/java/com/example/gas4u/DrawerBaseActivity.java	(date 1674966612870)
@@ -54,6 +54,10 @@
                 startActivity(new Intent(this, CartActivity.class));
                 overridePendingTransition(0,0);
                 break;
+            case R.id.nav_track_order:
+                startActivity(new Intent(this, UserTrackingOrder.class));
+                overridePendingTransition(0,0);
+                break;
             case R.id.nav_user_profile:
                 startActivity(new Intent(this, CustomerProfileActivity.class));
                 overridePendingTransition(0,0);
Index: app/src/main/res/drawable/ic_track_order.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_track_order.xml b/app/src/main/res/drawable/ic_track_order.xml
new file mode 100644
--- /dev/null	(date 1674966614967)
+++ b/app/src/main/res/drawable/ic_track_order.xml	(date 1674966614967)
@@ -0,0 +1,5 @@
+<vector android:height="24dp" android:tint="#000000"
+    android:viewportHeight="24" android:viewportWidth="24"
+    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="@android:color/white" android:pathData="M20,8h-3L17,4L3,4c-1.1,0 -2,0.9 -2,2v11h2c0,1.66 1.34,3 3,3s3,-1.34 3,-3h6c0,1.66 1.34,3 3,3s3,-1.34 3,-3h2v-5l-3,-4zM6,18.5c-0.83,0 -1.5,-0.67 -1.5,-1.5s0.67,-1.5 1.5,-1.5 1.5,0.67 1.5,1.5 -0.67,1.5 -1.5,1.5zM19.5,9.5l1.96,2.5L17,12L17,9.5h2.5zM18,18.5c-0.83,0 -1.5,-0.67 -1.5,-1.5s0.67,-1.5 1.5,-1.5 1.5,0.67 1.5,1.5 -0.67,1.5 -1.5,1.5z"/>
+</vector>
Index: app/src/main/res/drawable/shape_status.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/shape_status.xml b/app/src/main/res/drawable/shape_status.xml
new file mode 100644
--- /dev/null	(date 1674966615318)
+++ b/app/src/main/res/drawable/shape_status.xml	(date 1674966615318)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="oval">
+    <solid android:color="@color/lightGrey"/>
+</shape>
\ No newline at end of file
Index: .idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"RemoteRepositoriesConfiguration\">\r\n    <remote-repository>\r\n      <option name=\"id\" value=\"central\" />\r\n      <option name=\"name\" value=\"Maven Central repository\" />\r\n      <option name=\"url\" value=\"https://repo1.maven.org/maven2\" />\r\n    </remote-repository>\r\n    <remote-repository>\r\n      <option name=\"id\" value=\"jboss.community\" />\r\n      <option name=\"name\" value=\"JBoss Community repository\" />\r\n      <option name=\"url\" value=\"https://repository.jboss.org/nexus/content/repositories/public/\" />\r\n    </remote-repository>\r\n    <remote-repository>\r\n      <option name=\"id\" value=\"maven\" />\r\n      <option name=\"name\" value=\"maven\" />\r\n      <option name=\"url\" value=\"https://jitpack.io\" />\r\n    </remote-repository>\r\n    <remote-repository>\r\n      <option name=\"id\" value=\"BintrayJCenter\" />\r\n      <option name=\"name\" value=\"BintrayJCenter\" />\r\n      <option name=\"url\" value=\"https://jcenter.bintray.com/\" />\r\n    </remote-repository>\r\n    <remote-repository>\r\n      <option name=\"id\" value=\"Google\" />\r\n      <option name=\"name\" value=\"Google\" />\r\n      <option name=\"url\" value=\"https://dl.google.com/dl/android/maven2/\" />\r\n    </remote-repository>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml
--- a/.idea/jarRepositories.xml	(revision 600f03f897449a3336cc121ca15dd5e1cfe17b78)
+++ b/.idea/jarRepositories.xml	(date 1674967624986)
@@ -12,14 +12,14 @@
       <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
     </remote-repository>
     <remote-repository>
-      <option name="id" value="maven" />
-      <option name="name" value="maven" />
-      <option name="url" value="https://jitpack.io" />
-    </remote-repository>
-    <remote-repository>
       <option name="id" value="BintrayJCenter" />
       <option name="name" value="BintrayJCenter" />
       <option name="url" value="https://jcenter.bintray.com/" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="maven" />
+      <option name="name" value="maven" />
+      <option name="url" value="https://jitpack.io" />
     </remote-repository>
     <remote-repository>
       <option name="id" value="Google" />
Index: app/src/main/res/menu/main_drawer_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n\r\n    <group android:checkableBehavior=\"single\">\r\n        <item android:id= \"@+id/nav_brand\"\r\n            android:icon= \"@drawable/brand\"\r\n            android:title= \"Products\"/>\r\n\r\n        <item android:id= \"@+id/nav_shopping_bag\"\r\n            android:icon= \"@drawable/shopping_bag\"\r\n            android:title= \"Orders\"/>\r\n\r\n        <item android:id= \"@+id/nav_shopping_cart\"\r\n            android:icon= \"@drawable/shopping_cart\"\r\n            android:title= \"Carts\"/>\r\n\r\n        <item android:id= \"@+id/nav_user_profile\"\r\n            android:icon= \"@drawable/profile_photo\"\r\n            android:title= \"Profile\"/>\r\n\r\n        <item android:id= \"@+id/nav_helpline\"\r\n            android:icon= \"@drawable/ic_call\"\r\n            android:title= \"Helpline\"/>\r\n        \r\n        <item android:id= \"@+id/nav_logout\"\r\n            android:icon= \"@drawable/unlock\"\r\n            android:title= \"Logout\"/>\r\n\r\n    </group>\r\n\r\n</menu>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/menu/main_drawer_menu.xml b/app/src/main/res/menu/main_drawer_menu.xml
--- a/app/src/main/res/menu/main_drawer_menu.xml	(revision 600f03f897449a3336cc121ca15dd5e1cfe17b78)
+++ b/app/src/main/res/menu/main_drawer_menu.xml	(date 1674966617774)
@@ -14,6 +14,10 @@
             android:icon= "@drawable/shopping_cart"
             android:title= "Carts"/>
 
+        <item android:id= "@+id/nav_track_order"
+            android:icon= "@drawable/ic_track_order"
+            android:title= "Track Order"/>
+
         <item android:id= "@+id/nav_user_profile"
             android:icon= "@drawable/profile_photo"
             android:title= "Profile"/>
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"GAS4U APPLICATION\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.Gas4U\"\r\n        tools:targetApi=\"31\">\r\n        <activity\r\n            android:name=\".ViewHelplineActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".PlaceOrderActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".UpdateCustomerProfile\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".CustomerProfileActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".DrawerAdminActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".CheckoutActivity\"\r\n            android:exported=\"false\"\r\n            android:label=\"@string/title_activity_checkout\"\r\n            android:theme=\"@style/Theme.Gas4U\" /> <!-- This element is required to enable Google Pay in your app. -->\r\n        <meta-data\r\n            android:name=\"com.google.android.gms.wallet.api.enabled\"\r\n            android:value=\"true\" />\r\n\r\n        <activity\r\n            android:name=\".d4\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".d3\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".d2\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".d1\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".LogoutActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".RiderActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".AdminActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".menu_card\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".CartActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".OrderActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".BrandActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".DrawerBaseActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".DashboardActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ForgotPasswordActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".SignInActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".SignUpActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".WelcomeActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".splashActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision 600f03f897449a3336cc121ca15dd5e1cfe17b78)
+++ b/app/src/main/AndroidManifest.xml	(date 1674966612307)
@@ -20,6 +20,13 @@
                 android:value="" />
         </activity>
         <activity
+            android:name=".UserTrackingOrder"
+            android:exported="false">
+            <meta-data
+                android:name="android.app.lib_name"
+                android:value="" />
+        </activity>
+        <activity
             android:name=".PlaceOrderActivity"
             android:exported="false" />
         <activity
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 600f03f897449a3336cc121ca15dd5e1cfe17b78)
+++ b/.idea/misc.xml	(date 1674966784256)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" project-jdk-name="11" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="Android Studio default JDK" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"VcsDirectoryMappings\">\r\n    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
--- a/.idea/vcs.xml	(revision 600f03f897449a3336cc121ca15dd5e1cfe17b78)
+++ b/.idea/vcs.xml	(date 1674966784274)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+    <mapping directory="" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"GRADLE\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"Embedded JDK\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision 600f03f897449a3336cc121ca15dd5e1cfe17b78)
+++ b/.idea/gradle.xml	(date 1674966784308)
@@ -1,13 +1,11 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="GradleMigrationSettings" migrationVersion="1" />
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
         <option name="testRunner" value="GRADLE" />
         <option name="distributionType" value="DEFAULT_WRAPPED" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
-        <option name="gradleJvm" value="Embedded JDK" />
         <option name="modules">
           <set>
             <option value="$PROJECT_DIR$" />
Index: app/src/main/java/com/example/gas4u/PlaceOrderActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.gas4u;\r\n\r\nimport androidx.activity.result.ActivityResultCallback;\r\nimport androidx.activity.result.ActivityResultLauncher;\r\nimport androidx.activity.result.contract.ActivityResultContracts;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.gas4u.databinding.ActivityD1Binding;\r\nimport com.example.gas4u.databinding.ActivityUpdateCustomerProfileBinding;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\n\r\nimport java.util.HashMap;\r\n\r\npublic class PlaceOrderActivity extends AppCompatActivity {\r\n\r\n    //ActivityUpdateCustomerProfileBinding activityUpdateCustomerProfileBinding;\r\n    //ImageView userPhoto;\r\n    EditText nameEt, phoneEt, addressEt;\r\n\r\n    FirebaseAuth firebaseAuth;\r\n    FirebaseFirestore firebaseFirestore;\r\n\r\n    private ProgressDialog progressDialog;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n       // activityUpdateCustomerProfileBinding = ActivityUpdateCustomerProfileBinding.inflate(getLayoutInflater());\r\n       // setContentView(activityUpdateCustomerProfileBinding.getRoot());\r\n       setContentView(R.layout.activity_place_order);\r\n\r\n        //init ui views\r\n        nameEt = findViewById(R.id.NEWname);\r\n        phoneEt = findViewById(R.id.NEWPhone);\r\n        addressEt = findViewById(R.id.NEWAddress);\r\n\r\n\r\n        firebaseAuth = FirebaseAuth.getInstance();\r\n        firebaseFirestore = FirebaseFirestore.getInstance();\r\n\r\n        //setup progress dialog\r\n        progressDialog = new ProgressDialog(this);\r\n        progressDialog.setTitle(\"Please wait\");\r\n        progressDialog.setCanceledOnTouchOutside(false);\r\n    }\r\n\r\n    public void btnupdate(View view){\r\n        inputData();\r\n    }\r\n\r\n    private String userName, userPhone, userAddress, shipstatus;\r\n    private void inputData() {\r\n        //1) Input data\r\n        userName = nameEt.getText().toString();\r\n        userPhone = phoneEt.getText().toString();\r\n        userAddress = addressEt.getText().toString();\r\n        shipstatus = \"Ordered\";\r\n\r\n        //2) validate data\r\n        if(TextUtils.isEmpty(userName)){\r\n            Toast.makeText(this, \"Name is required...\", Toast.LENGTH_SHORT).show();\r\n            return; // don't proceed further\r\n        }\r\n        if(TextUtils.isEmpty(userPhone)){\r\n            Toast.makeText(this, \"Age is required...\", Toast.LENGTH_SHORT).show();\r\n            return; // don't proceed further\r\n        }\r\n        if(TextUtils.isEmpty(userAddress)){\r\n            Toast.makeText(this, \"Address is required...\", Toast.LENGTH_SHORT).show();\r\n            return; // don't proceed further\r\n        }\r\n        addUser();\r\n\r\n\r\n    }\r\n\r\n    private void addUser() {\r\n\r\n        //3) Add data to db\r\n        progressDialog.setMessage(\"Update user...\");\r\n        progressDialog.show();\r\n\r\n        String timestamp = \"\"+System.currentTimeMillis();\r\n        FirebaseUser user = firebaseAuth.getCurrentUser();\r\n\r\n            //setup data to upload\r\n            HashMap<String, Object> hashMap = new HashMap<>();\r\n            hashMap.put(\"productId\", \"\"+timestamp);\r\n            hashMap.put(\"Receiver Name: \", userName);\r\n            hashMap.put(\"Phone Number\", userPhone);\r\n            hashMap.put(\"Address\", userAddress);\r\n            hashMap.put(\"Order Status\", shipstatus);\r\n            hashMap.put(\"timestamp\", timestamp);\r\n            hashMap.put(\"uid\", firebaseFirestore.collection(\"Order\").document(user.getUid()));\r\n\r\n            //add to db\r\n            firebaseFirestore.collection(\"Order\").document(user.getUid())\r\n                    .set(hashMap).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<Void> task) {\r\n                            if(task.isSuccessful()){\r\n                                //added to db\r\n                                progressDialog.dismiss();\r\n                                Toast.makeText(PlaceOrderActivity.this, \"Order placed...\", Toast.LENGTH_SHORT).show();\r\n                                clearData();\r\n                            }\r\n                        }\r\n                    })\r\n                    .addOnFailureListener(new OnFailureListener() {\r\n                        @Override\r\n                        public void onFailure(@NonNull Exception e) {\r\n                            progressDialog.dismiss();\r\n                            Toast.makeText(PlaceOrderActivity.this, \"\"+e.getMessage(), Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    });\r\n\r\n        clearData();\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    private void clearData() {\r\n        //clear data after upload\r\n        nameEt.setText(\"\");\r\n        phoneEt.setText(\"\");\r\n        addressEt.setText(\"\");\r\n    }\r\n\r\n\r\n    public void btnback(View v){\r\n\r\n        Intent intent2 = new Intent(getBaseContext(), CartActivity.class);\r\n        startActivity(intent2);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/gas4u/PlaceOrderActivity.java b/app/src/main/java/com/example/gas4u/PlaceOrderActivity.java
--- a/app/src/main/java/com/example/gas4u/PlaceOrderActivity.java	(revision 600f03f897449a3336cc121ca15dd5e1cfe17b78)
+++ b/app/src/main/java/com/example/gas4u/PlaceOrderActivity.java	(date 1674966613184)
@@ -34,8 +34,6 @@
 
 public class PlaceOrderActivity extends AppCompatActivity {
 
-    //ActivityUpdateCustomerProfileBinding activityUpdateCustomerProfileBinding;
-    //ImageView userPhoto;
     EditText nameEt, phoneEt, addressEt;
 
     FirebaseAuth firebaseAuth;
@@ -104,14 +102,22 @@
         String timestamp = ""+System.currentTimeMillis();
         FirebaseUser user = firebaseAuth.getCurrentUser();
 
-            //setup data to upload
+            //setup data to upload for new address
             HashMap<String, Object> hashMap = new HashMap<>();
-            hashMap.put("productId", ""+timestamp);
+            //hashMap.put("productId", ""+timestamp);
             hashMap.put("Receiver Name: ", userName);
             hashMap.put("Phone Number", userPhone);
             hashMap.put("Address", userAddress);
             hashMap.put("Order Status", shipstatus);
-            hashMap.put("timestamp", timestamp);
+            //dummy
+            String products = "Petron 14kg";
+            Integer quantity = 1;
+            Double totalprice = 25.00;
+
+            hashMap.put("Products", products);
+            hashMap.put("Quantity", quantity);
+            hashMap.put("Total Price", totalprice);
+            //hashMap.put("timestamp", timestamp);
             hashMap.put("uid", firebaseFirestore.collection("Order").document(user.getUid()));
 
             //add to db
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"app_name\">Gas4U</string>\r\n    <string name=\"menu_drawer_open\">Drawer Open</string>\r\n    <string name=\"menu_drawer_close\">Drawer Close</string>\r\n\r\n    <!-- Checkout activity -->\r\n    <string name=\"title_activity_checkout\">CheckoutActivity</string>\r\n    <string name=\"checkout_item_description\">Description</string>\r\n    <string name=\"googlepay_status_unavailable\" translatable=\"false\">Unfortunately, Google Pay is\r\n        not available on this phone.\r\n    </string>\r\n    <string name=\"payments_show_name\" translatable=\"false\">Successfully received payment data for\r\n        %s!\r\n    </string>\r\n    <string name=\"title_activity_home\">HomeActivity</string>\r\n    <string name=\"navigation_drawer_open\">Open navigation drawer</string>\r\n    <string name=\"navigation_drawer_close\">Close navigation drawer</string>\r\n    <string name=\"nav_header_title\">Android Studio</string>\r\n    <string name=\"nav_header_subtitle\">android.studio@android.com</string>\r\n    <string name=\"nav_header_desc\">Navigation header</string>\r\n    <string name=\"action_settings\">Settings</string>\r\n\r\n    <string name=\"menu_home\">Home</string>\r\n    <string name=\"menu_gallery\">Gallery</string>\r\n    <string name=\"menu_slideshow\">Slideshow</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision 600f03f897449a3336cc121ca15dd5e1cfe17b78)
+++ b/app/src/main/res/values/strings.xml	(date 1674966618514)
@@ -21,6 +21,7 @@
     <string name="action_settings">Settings</string>
 
     <string name="menu_home">Home</string>
+    <string name="track_order">Track Order</string>
     <string name="menu_gallery">Gallery</string>
     <string name="menu_slideshow">Slideshow</string>
 </resources>
\ No newline at end of file
Index: app/src/main/res/layout/activity_logout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".LogoutActivity\">\r\n\r\n    <Button\r\n        android:id=\"@+id/logoutBtn\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"10dp\"\r\n        android:layout_marginTop=\"662dp\"\r\n        android:layout_marginEnd=\"10dp\"\r\n        android:layout_marginBottom=\"21dp\"\r\n        android:text=\"Logout\"\r\n        android:background=\"@drawable/button_sign_in\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_logout.xml b/app/src/main/res/layout/activity_logout.xml
--- a/app/src/main/res/layout/activity_logout.xml	(revision 600f03f897449a3336cc121ca15dd5e1cfe17b78)
+++ b/app/src/main/res/layout/activity_logout.xml	(date 1674966616946)
@@ -15,7 +15,7 @@
         android:layout_marginEnd="10dp"
         android:layout_marginBottom="21dp"
         android:text="Logout"
-        android:background="@drawable/button_sign_in"
+        android:background="@drawable/ic_baseline_logout_24"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
Index: app/src/main/res/layout/activity_user_tracking_order.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_user_tracking_order.xml b/app/src/main/res/layout/activity_user_tracking_order.xml
new file mode 100644
--- /dev/null	(date 1674966617288)
+++ b/app/src/main/res/layout/activity_user_tracking_order.xml	(date 1674966617288)
@@ -0,0 +1,193 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".UserTrackingOrder">
+
+    <ImageView
+        android:id="@+id/imageOrderPlaced"
+        android:layout_width="53dp"
+        android:layout_height="53dp"
+        android:contentDescription="@string/app_name"
+        android:src="@drawable/order_place"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.136"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.34" />
+
+    <ImageView
+        android:id="@+id/imageOrderConfirm"
+        android:layout_width="53dp"
+        android:layout_height="53dp"
+        android:contentDescription="@string/app_name"
+        android:src="@drawable/confirm"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.136"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.461" />
+
+    <ImageView
+        android:id="@+id/imageOrderDeliver"
+        android:layout_width="60dp"
+        android:layout_height="65dp"
+        android:contentDescription="@string/app_name"
+        android:src="@drawable/deliver"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.119"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.62" />
+
+    <TextView
+        android:id="@+id/textView7"
+        android:layout_width="99dp"
+        android:layout_height="23dp"
+        android:text="Order Placed"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.387"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.313" />
+
+    <TextView
+        android:id="@+id/ordplace"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="We have received your order!!!"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.545"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.372" />
+
+    <TextView
+        android:id="@+id/textView10"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Order Confirmation"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.415"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.45" />
+
+    <TextView
+        android:id="@+id/ordconfirm"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Waiting for seller to confirm the order"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.666"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <TextView
+        android:id="@+id/textView12"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Out for Delivery"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.385"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.598" />
+
+    <TextView
+        android:id="@+id/orddelivery"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Get ready, your order will delivered soon!"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.765"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.644" />
+
+    <TextView
+        android:id="@+id/orderid"
+        android:layout_width="158dp"
+        android:layout_height="19dp"
+        android:text="Order ID: 10234"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.079"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.101" />
+
+    <TextView
+        android:id="@+id/products"
+        android:layout_width="151dp"
+        android:layout_height="19dp"
+        android:text="Products: "
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.091"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.141" />
+
+    <TextView
+        android:id="@+id/quantity"
+        android:layout_width="124dp"
+        android:layout_height="19dp"
+        android:text="Quantity: "
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.071"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.074" />
+
+    <TextView
+        android:id="@+id/totalprice"
+        android:layout_width="148dp"
+        android:layout_height="21dp"
+        android:text="Total price:"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.073"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.179" />
+
+    <TextView
+        android:id="@+id/address"
+        android:layout_width="147dp"
+        android:layout_height="22dp"
+        android:text="Address: "
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.071"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.206" />
+
+    <TextView
+        android:id="@+id/textView19"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="ORDER"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.498"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.022" />
+
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/drawable/shape_status_completed.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/shape_status_completed.xml b/app/src/main/res/drawable/shape_status_completed.xml
new file mode 100644
--- /dev/null	(date 1674966615354)
+++ b/app/src/main/res/drawable/shape_status_completed.xml	(date 1674966615354)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="oval">
+    <solid android:color="@color/colorPrimary"/>
+</shape>
\ No newline at end of file
